Use floats or inline-block in your CSS to achieve a two-column layout
 - Good use of floats, but a couple issues are preventing the columns from lining up. See additional comments.
Use the correct Open Sans Google Font typeface to style the text denoted in the design file and according to the JPEG provided
 - Good!
Use proper filename conventions (lowercase, .html)
 - Good!
Use an external CSS stylesheet to style your page
 - Good!
Make sure that all images are no wider than their containers
 - Good!
Add a hover effect to all the links using pseudo-classes
 - I see you have a rule for this, but it's not quite working. See additional comments.
Integrate drop caps using pseudo-classes
 - Good!

Additional Comments:

- Good work. Your layout contains all the pieces in the right places, but there are a few issues causing some problems with the display:

- Your "nav-bar" div isn't inside the body. All of your html should be nested in the head or in the body.

- Your "blog1" div isn't closed properly. I think you meant to close that before the "blog2" div started, but you're missing the </div>. Maintaining proper indentation can help spot missing tags.

- Your "nav-items" class has a left margin of 1200px. On most displays this will smash it against the right side of the screen.

- Your "content" div has a width of 75% and your "side-bar" div has a width of 20%, but unfortunately due to padding they are still too wide to sit side-by-side. You can fix the with a box-sizing rule in your css: "* { box-sizing: border-box; }". This will cause padding & borders to be included in the width calculation for elements.

- Try to reuse classes where possible. Instead of having a "blog1" class and a "blog2" class you could have just made a "blog" class and defined styles that apply to both. This cuts down on repeated styles.

- Your a:hover pseudo class style isn't working because later in your CSS you have a rule for ".content a" that overrides it with the color #033048. The ".content" class provides the same level of specificity as the :hover pseudo class, and since it comes later in the CSS it wins out. Try entering "a:hover" and ".content a" into the CSS Specificity Calculator to see what I mean (https://specificity.keegan.st/). To solve this problem you should put your <a> pseudo class styles AFTER other <a> styles.